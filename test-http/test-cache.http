### Pruebas del sistema de caché

#### 1. Obtener configuración del caché
GET http://localhost:5063/api/cache/config
Content-Type: application/json

###

#### 2. Crear algunos productos para probar el caché
POST http://localhost:5063/api/productos
Content-Type: application/json

{
  "nombre": "Producto Test Cache 1",
  "descripcion": "Producto para probar el caché",
  "precio": 99.99,
  "stock": 50,
  "categoria": "TestCache"
}

###

POST http://localhost:5063/api/productos
Content-Type: application/json

{
  "nombre": "Producto Test Cache 2", 
  "descripcion": "Segundo producto para probar el caché",
  "precio": 149.99,
  "stock": 30,
  "categoria": "TestCache"
}

###

#### 3. Obtener todos los productos (primera vez - cache miss)
GET http://localhost:5063/api/productos
Content-Type: application/json

###

#### 4. Obtener todos los productos (segunda vez - debería ser cache hit)
GET http://localhost:5063/api/productos
Content-Type: application/json

###

#### 5. Obtener producto por ID (primera vez - cache miss)
GET http://localhost:5063/api/productos/1
Content-Type: application/json

###

#### 6. Obtener producto por ID (segunda vez - debería ser cache hit)
GET http://localhost:5063/api/productos/1
Content-Type: application/json

###

#### 7. Buscar productos por categoría (primera vez - cache miss)
GET http://localhost:5063/api/productos/categoria/TestCache
Content-Type: application/json

###

#### 8. Buscar productos por categoría (segunda vez - debería ser cache hit)
GET http://localhost:5063/api/productos/categoria/TestCache
Content-Type: application/json

###

#### 9. Crear carrito para probar cache de carritos
POST http://localhost:5063/api/carrito/usuario1/agregar
Content-Type: application/json

{
  "productoId": 1,
  "cantidad": 2
}

###

#### 10. Obtener carrito (primera vez - cache miss)
GET http://localhost:5063/api/carrito/usuario1
Content-Type: application/json

###

#### 11. Obtener carrito (segunda vez - debería ser cache hit)
GET http://localhost:5063/api/carrito/usuario1
Content-Type: application/json

###

#### 12. Verificar si existe una clave específica en el caché
GET http://localhost:5063/api/cache/exists/productos:todos
Content-Type: application/json

###

#### 13. Invalidar caché de productos específico
DELETE http://localhost:5063/api/cache/productos/1
Content-Type: application/json

###

#### 14. Obtener producto por ID después de invalidación (debería ser cache miss)
GET http://localhost:5063/api/productos/1
Content-Type: application/json

###

#### 15. Invalidar todo el caché de productos
DELETE http://localhost:5063/api/cache/productos
Content-Type: application/json

###

#### 16. Obtener todos los productos después de invalidación (debería ser cache miss)
GET http://localhost:5063/api/productos
Content-Type: application/json

###

#### 17. Invalidar caché de carrito específico
DELETE http://localhost:5063/api/cache/carritos/usuario1
Content-Type: application/json

###

#### 18. Obtener carrito después de invalidación (debería ser cache miss)
GET http://localhost:5063/api/carrito/usuario1
Content-Type: application/json

###

#### 19. Obtener estadísticas del caché
GET http://localhost:5063/api/cache/stats
Content-Type: application/json

###

#### 20. Invalidar todo el caché
DELETE http://localhost:5063/api/cache/all
Content-Type: application/json

###

#### 21. Verificar que el caché está vacío
GET http://localhost:5063/api/cache/exists/productos:todos
Content-Type: application/json

###
